1.Создать двух пользователей (с помощью метода User.objects.create_user):

user1=User.objects.create(username='Mike', first_name='Frank')
user2=User.objects.create(username='Pat', first_name='PN')


2.Создать два объекта модели Author, связанные с пользователями:
Author.objects.create(authorUser=user1)
Author.objects.create(authorUser=user2)


3.Добавить 4 категории в модель Category:
Category.objects.create(name='IT')
Category.objects.create(name='Education')
Category.objects.create(name='IT-stories')
Category.objects.create(name='IT-Job openings')

4.Добавить 2 статьи и 1 новость

Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')),categoryType='NW', title='smth title',text='smth text')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')),categoryType='AR', title='smth title2222',text='222smth text')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Pat')),categoryType='AR', title='smth title22',text='22smth text')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Mike')),categoryType='NW', title='Стажировка',text='Требуется стажер Js')
Post.objects.create(author=Author.objects.get(authorUser=User.objects.get(username='Pat')),categoryType='AR', title='Программист',text='Как я стал программистом')


5.Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий)

Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))
Post.objects.get(id=2).postCategory.add(Category.objects.get(id=1, id=2))
Post.objects.get(id=3).postCategory.add(Category.objects.get(id=2))
Post.objects.get(id=4).postCategory.add(Category.objects.get(id=4))
Post.objects.get(id=5).postCategory.add(Category.objects.get(id=3))


6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

Comment.objects.create(commentUser=User.objects.get(username='Mike'), commentPost=Post.objects.get(id=1), text='comment text1')
Comment.objects.create(commentUser=User.objects.get(username='Mike'), commentPost=Post.objects.get(id=2), text='comment text2')
Comment.objects.create(commentUser=User.objects.get(username='Pat'), commentPost=Post.objects.get(id=2), text='comment text3')
Comment.objects.create(commentUser=User.objects.get(username='Mike'), commentPost=Post.objects.get(id=4), text='Отличная вакансия')
Comment.objects.create(commentUser=User.objects.get(username='Mike'), commentPost=Post.objects.get(id=5), text='Молодец')


7.Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Comment.objects.get(id=1).like()
Comment.objects.get(id=3).like()
Comment.objects.get(id=2).dislike()
Comment.objects.get(id=4).like()
Comment.objects.get(id=5).like()

Post.objects.get(id=1).like()
Post.objects.get(id=2).dislike()
Post.objects.get(id=3).like()
Post.objects.get(id=4).like()
Post.objects.get(id=5).dislike()

Comment.objects.get(id=1).rating
Comment.objects.get(id=2).rating
Comment.objects.get(id=3).rating
Comment.objects.get(id=4).rating
Comment.objects.get(id=5).rating

8. Обновить рейтинги пользователей.
Author.objects.get(authorUser=User.objects.get(username='Mike')).update_rating()
Author.objects.get(authorUser=User.objects.get(username='Pat')).update_rating()


узнаем рейтинг авторов:
a=Author.objects.get(authorUser=User.objects.get(username='Pat'))
a.ratingAuthor
b=Author.objects.get(authorUser=User.objects.get(username='Mike'))
b.ratingAuthor


9.Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта)
best=Author.objects.all().order_by('-ratingAuthor').values('authorUser__username','ratingAuthor')[0]
print(best)


10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
a=values('dateCreation', 'author__authorUser__username', 'rating', 'title')[0]
b=Post.preview(Post.objects.all().order_by('-rating')[0])
super=(a,b)
print(super)

11.Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
Post.objects.all().order_by('-rating')[0].comment_set.values('dateCreation', 'commentUser__username', 'rating','text')



